[{"path":"https://jamierowen.github.io/pipework/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jamie Owen. Author, maintainer.","code":""},{"path":"https://jamierowen.github.io/pipework/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Owen J (2022). pipework: Create 'Plumber' Applications Packages. R package version 0.0.1.9000, https://jamierowen.github.io/pipework/.","code":"@Manual{,   title = {pipework: Create 'Plumber' Applications as Packages},   author = {Jamie Owen},   year = {2022},   note = {R package version 0.0.1.9000},   url = {https://jamierowen.github.io/pipework/}, }"},{"path":"https://jamierowen.github.io/pipework/index.html","id":"pipework","dir":"","previous_headings":"","what":"Create Plumber Applications as Packages","title":"Create Plumber Applications as Packages","text":"package creating Plumber APIs packages. package much inspired {leprechaun} {golem}. aim allow plumber application contained package order leverage benefits testing documentation R code. just one persons opinion plumber application can contained within R package structure. Like {leprechaun}, aims solution leaves final package without dependency pipework.","code":""},{"path":"https://jamierowen.github.io/pipework/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Create Plumber Applications as Packages","text":"pipework starts assumption already R package structure place. recommend excellent usethis package want instantiate new package. effect adding location inside inst/ directory package adding routes. Adding source code R/ directory allow build plumber object routes add necessary dependencies DESRIPTION file.","code":"# Optionally create a package # usethis::create_package(\".\")  # Start a pipework project pipework::lay_pipework()"},{"path":"https://jamierowen.github.io/pipework/index.html","id":"templated-files","dir":"","previous_headings":"","what":"Templated files","title":"Create Plumber Applications as Packages","text":"files added package templates inside {pipework} end underscore, e.g \"R/generate_api_.R\". files intended modified user. Although nothing prevent .","code":""},{"path":"https://jamierowen.github.io/pipework/index.html","id":"entrypoint","dir":"","previous_headings":"","what":"entrypoint","title":"Create Plumber Applications as Packages","text":"can add entrypoint run application add_entrypoint(). entrypoint script runnable script create plumber object. entrypoint.R file already format RStudio Connect might expect. run API locally","code":"api = plumber::pr(\"entrypoint.R\") plumber::pr_run(api)"},{"path":"https://jamierowen.github.io/pipework/index.html","id":"logging","dir":"","previous_headings":"","what":"Logging","title":"Create Plumber Applications as Packages","text":"can add {logger} project add_logging(). gives tools set use logger. setup_logger() entrypoint API set directory (default “./API_logs”) rotating log files custom JSON layout log files. logger setup also provides with_log_handle(expr) can used internally log expressions.","code":""},{"path":"https://jamierowen.github.io/pipework/index.html","id":"logging-hooks","dir":"","previous_headings":"","what":"Logging hooks","title":"Create Plumber Applications as Packages","text":"{pipework} comes couple hooks templated can added project. hooks simply log requests data pre post routing whether action success. add hooks package source. pipework::add_hooks()","code":""},{"path":"https://jamierowen.github.io/pipework/index.html","id":"new-routes","dir":"","previous_headings":"","what":"New routes","title":"Create Plumber Applications as Packages","text":"{pipework} allows add new route package. view author logic testable, annotated plumber route definitions just exported functions package. Adding route add/append 3 files package. See vignette adding routes detail.","code":""},{"path":"https://jamierowen.github.io/pipework/reference/add_entrypoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Add API entrypoint to root of project — add_entrypoint","title":"Add API entrypoint to root of project — add_entrypoint","text":"Create runnable entrypoint root package.","code":""},{"path":"https://jamierowen.github.io/pipework/reference/add_entrypoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add API entrypoint to root of project — add_entrypoint","text":"","code":"add_entrypoint()"},{"path":"https://jamierowen.github.io/pipework/reference/add_hooks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add default logging hooks to your pipework project — add_hooks","title":"Add default logging hooks to your pipework project — add_hooks","text":"Creates file package source R/hooks_.R contains code register pre post route logging hooks API.","code":""},{"path":"https://jamierowen.github.io/pipework/reference/add_hooks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add default logging hooks to your pipework project — add_hooks","text":"","code":"add_hooks()"},{"path":"https://jamierowen.github.io/pipework/reference/add_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Add package code for logging — add_logging","title":"Add package code for logging — add_logging","text":"Creates file R/ package provides functions setting using logger API.","code":""},{"path":"https://jamierowen.github.io/pipework/reference/add_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add package code for logging — add_logging","text":"","code":"add_logging()"},{"path":"https://jamierowen.github.io/pipework/reference/add_route.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new route to your pipework project — add_route","title":"Add a new route to your pipework project — add_route","text":"Add 3 files, one route definition exposed plumber router calling `get_internal_routes()` [generate_api_.R generated `lay_pipework()`, stored inst/extdata/api/routes/] second file R/api_my_route.R generated, wrapper core logic API. receive request, typically call another function. third file R/<route_name>.R creating logic behind routed request.","code":""},{"path":"https://jamierowen.github.io/pipework/reference/add_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new route to your pipework project — add_route","text":"","code":"add_route(   route,   method = c(\"get\", \"post\", \"put\", \"delete\", \"head\", \"options\", \"patch\", \"use\") )"},{"path":"https://jamierowen.github.io/pipework/reference/add_route.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new route to your pipework project — add_route","text":"route length 1 character vector, path endpoint. path relative root address router. e.g - \"is_alive\" - \"test/is_alive\" method length 1 character vector specifying HTTP method","code":""},{"path":"https://jamierowen.github.io/pipework/reference/lay_pipework.html","id":null,"dir":"Reference","previous_headings":"","what":"Add package code for API generation — lay_pipework","title":"Add package code for API generation — lay_pipework","text":"core function pipework package. Initiate pipework project existing package. currently package see usethis::use_package(). add necessary utilities generate plumber object collection routes inst/extdata/api/routes.","code":""},{"path":"https://jamierowen.github.io/pipework/reference/lay_pipework.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add package code for API generation — lay_pipework","text":"","code":"lay_pipework()"},{"path":"https://jamierowen.github.io/pipework/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""}]
